package net.etfbl.main;
import java.util.Random;

import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.VBox;
import net.etfbl.model.*;
import net.etfbl.users.BookFileHandler;
import net.etfbl.users.ReservationFileHandler;
import net.etfbl.users.UserFileHandler;
public class LibraryApp {

    public Scene createMainScene() {
        // Glavni layout
        BorderPane root = new BorderPane();

        // MenuBar
        MenuBar menuBar = new MenuBar();

        // Meniji
        Menu membersMenu = new Menu("Članovi");
        Menu booksMenu = new Menu("Knjige");
        Menu reservationsMenu = new Menu("Rezervacije");

        // Dodavanje menija u MenuBar
        menuBar.getMenus().addAll(membersMenu, booksMenu, reservationsMenu);

        // Postavljanje MenuBar na vrh
        root.setTop(menuBar);

        // Glavni sadržaj (form)
        VBox content = new VBox(10);
        content.setPadding(new Insets(10));

        // Form for Adding User
        Button addUserButton = new Button("Add User");
        addUserButton.setOnAction(e -> showAddUserForm(content));

        content.getChildren().add(addUserButton);

        // Glavna scena
        Scene scene = new Scene(root, 800, 600);
        return scene;
    }

    private void showAddUserForm(VBox content) {
        // Create input fields for user data
        TextField firstNameField = new TextField();
        TextField lastNameField = new TextField();
        TextField emailField = new TextField();
        TextField usernameField = new TextField();
        PasswordField passwordField = new PasswordField();
        
        // Labels for input fields
        Label firstNameLabel = new Label("First Name:");
        Label lastNameLabel = new Label("Last Name:");
        Label emailLabel = new Label("Email:");
        Label usernameLabel = new Label("Username:");
        Label passwordLabel = new Label("Password:");

        // Create Add Button
        Button submitButton = new Button("Add User");
        submitButton.setOnAction(e -> {
        	int id = new Random().nextInt(100);
            String firstName = firstNameField.getText();
            String lastName = lastNameField.getText();
            String email = emailField.getText();
            String username = usernameField.getText();
            String password = passwordField.getText();

            Member newUser = new Member(id,firstName, lastName, email, username, password);
            boolean success = UserFileHandler.addUser(newUser);

            if (success) {
                showAlert("Success", "User added successfully!");
            } else {
                showAlert("Error", "Username already exists.");
            }
        });

        // Create a GridPane for the form
        GridPane formGrid = new GridPane();
        formGrid.setVgap(10);
        formGrid.setHgap(10);
        formGrid.add(firstNameLabel, 0, 0);
        formGrid.add(firstNameField, 1, 0);
        formGrid.add(lastNameLabel, 0, 1);
        formGrid.add(lastNameField, 1, 1);
        formGrid.add(emailLabel, 0, 2);
        formGrid.add(emailField, 1, 2);
        formGrid.add(usernameLabel, 0, 3);
        formGrid.add(usernameField, 1, 3);
        formGrid.add(passwordLabel, 0, 4);
        formGrid.add(passwordField, 1, 4);
        formGrid.add(submitButton, 1, 5);

        content.getChildren().clear(); // Clear previous content
        content.getChildren().add(formGrid); // Show the form
    }

    private void showAlert(String title, String message) {
        Alert alert = new Alert(AlertType.INFORMATION);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }
    private void showAddBookForm(VBox content) {
        TextField titleField = new TextField();
        TextField authorField = new TextField();
        TextField yearField = new TextField();
        CheckBox availableCheckBox = new CheckBox("Available");

        // Labels for input fields
        Label titleLabel = new Label("Title:");
        Label authorLabel = new Label("Author:");
        Label yearLabel = new Label("Year:");
        Label availableLabel = new Label("Availability:");

        // Create Add Button
        Button submitButton = new Button("Add Book");
        submitButton.setOnAction(e -> {
        	int id =new Random().nextInt(100);
            String title = titleField.getText();
            String author = authorField.getText();
            int year = Integer.parseInt(yearField.getText());
            boolean available = availableCheckBox.isSelected();

            Book newBook = new Book(id, title, author, year, available);
            boolean success = BookFileHandler.addBook(newBook);

            if (success) {
                showAlert("Success", "Book added successfully!");
            } else {
                showAlert("Error", "Failed to add book.");
            }
        });

        // Create a GridPane for the form
        GridPane formGrid = new GridPane();
        formGrid.setVgap(10);
        formGrid.setHgap(10);
        formGrid.add(titleLabel, 0, 0);
        formGrid.add(titleField, 1, 0);
        formGrid.add(authorLabel, 0, 1);
        formGrid.add(authorField, 1, 1);
        formGrid.add(yearLabel, 0, 2);
        formGrid.add(yearField, 1, 2);
        formGrid.add(availableLabel, 0, 3);
        formGrid.add(availableCheckBox, 1, 3);
        formGrid.add(submitButton, 1, 4);

        content.getChildren().clear();
        content.getChildren().add(formGrid);
    }
    private void showAddReservationForm(VBox content) {
        TextField memberIdField = new TextField();
        TextField bookIdField = new TextField();
        TextField dateField = new TextField();
        TextField statusField = new TextField();

        // Labels for input fields
        Label memberIdLabel = new Label("Member ID:");
        Label bookIdLabel = new Label("Book ID:");
        Label dateLabel = new Label("Date:");
        Label statusLabel = new Label("Status:");

        // Create Add Button
        Button submitButton = new Button("Add Reservation");
        submitButton.setOnAction(e -> {
        	int id = new Random().nextInt(100);
            int memberId = Integer.parseInt(memberIdField.getText());
            int bookId = Integer.parseInt(bookIdField.getText());
            String date = dateField.getText();
            String status = statusField.getText();
            StudentService ss = new StudentService();
            Member member = getById(memberId); // Implement method to find member by ID
            Book book = findBookById(bookId); // Implement method to find book by ID

            if (member != null && book != null) {
                Reservation newReservation = new Reservation(id, member, book, date, status);
                boolean success = ReservationFileHandler.addReservation(newReservation);

                if (success) {
                    showAlert("Success", "Reservation added successfully!");
                } else {
                    showAlert("Error", "Failed to add reservation.");
                }
            } else {
                showAlert("Error", "Invalid member or book ID.");
            }
        });

        // Create a GridPane for the form
        GridPane formGrid = new GridPane();
        formGrid.setVgap(10);
        formGrid.setHgap(10);
        formGrid.add(memberIdLabel, 0, 0);
        formGrid.add(memberIdField, 1, 0);
        formGrid.add(bookIdLabel, 0, 1);
        formGrid.add(bookIdField, 1, 1);
        formGrid.add(dateLabel, 0, 2);
        formGrid.add(dateField, 1, 2);
        formGrid.add(statusLabel, 0, 3);
        formGrid.add(statusField, 1, 3);
        formGrid.add(submitButton, 1, 4);

        content.getChildren().clear();
        content.getChildren().add(formGrid);
    }


}
